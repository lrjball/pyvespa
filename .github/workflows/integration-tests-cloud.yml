name: Integration - cloud

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - thomasht86/some-tests-to-github-action

jobs:
  integration-vespa-cloud:
    runs-on: ubuntu-latest
    steps:
      - name: Remove unnecessary files
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip" # caching pip dependencies
      - name: Install dependencies
        run: pip install -e .[dev]
      - name: |
          Run integration tests
        env:
          VESPA_TEAM_API_KEY: ${{ secrets.VESPA_TEAM_API_KEY }}
        run: |
          pytest tests/integration/test_integration_vespa_cloud.py -s -v
  integration-vespa-cloud-vector-search:
    runs-on: ubuntu-latest
    steps:
      - name: Remove unnecessary files
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip" # caching pip dependencies
      - name: Install dependencies
        run: pip install -e .[dev]
      - name: |
          Run integration tests
        env:
          VESPA_TEAM_API_KEY: ${{ secrets.VESPA_TEAM_API_KEY }}
        run: |
          pytest tests/integration/test_integration_vespa_cloud_vector_search.py -s -v
  integration-vespa-cloud-token:
    runs-on: ubuntu-latest
    steps:
      - name: Remove unnecessary files
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip" # caching pip dependencies
      - name: Install dependencies
        run: pip install -e .[dev]
      - name: |
          Run integration tests
        env:
          VESPA_TEAM_API_KEY: ${{ secrets.VESPA_TEAM_API_KEY }}
          VESPA_CLOUD_SECRET_TOKEN: ${{ secrets.VESPA_CLOUD_SECRET_TOKEN }}
        run: |
          pytest tests/integration/test_integration_vespa_cloud_token.py -s -v
